# Версия синтаксиса Docker Compose
version: '3.8'

# Определение сервисов (контейнеров)
services:

  # Сервис Spring Boot приложения (Бэкенд)
  rag-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag-app
    ports:
      - "8080:8080" # Проброс порта приложения
    environment:
      # Настройки для подключения к другим сервисам внутри Docker сети
      # Приложение внутри Docker будет использовать имена сервисов как хосты.
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ragdb
      - SPRING_AI_OLLAMA_BASE_URL=http://ollama:11434
      - APP_INTEGRATIONS_NEO4J_URI=bolt://neo4j:7687
    depends_on:
      # Запускаем приложение только после того, как все зависимости будут "здоровы"
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - rag-net

  # Сервис PostgreSQL с расширением pgvector
  postgres:
    image: pgvector/pgvector:pg16
    container_name: rag-postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ragdb
    ports:
      - "5432:5432" # Проброс порта для подключения из IDE/локального запуска
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d ragdb" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - rag-net

  # Сервис Ollama для запуска локальных LLM
  ollama:
    image: ollama/ollama
    container_name: rag-ollama
    ports:
      - "11434:11434" # Проброс порта для подключения из IDE/локального запуска
    volumes:
      - ollama-data:/root/.ollama
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:11434/api/tags" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - rag-net

  # Графовая база данных Neo4j
  neo4j:
    image: neo4j:5
    container_name: rag-neo4j
    ports:
      - "7474:7474" # Проброс порта для веб-интерфейса
      - "7687:7687" # Проброс порта для Bolt-протокола (для драйвера)
    volumes:
      - neo4j-data:/data
    environment:
      - NEO4J_AUTH=neo4j/password
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "wget -O /dev/null --post-data='{}' --header='Content-Type:application/json' --header='Authorization: Basic bmVvNGo6cGFzc3dvcmQ=' http://localhost:7474/db/data/transaction/commit' || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - rag-net

# Определение именованных томов для персистентного хранения данных
volumes:
  postgres-data:
    driver: local
  ollama-data:
    driver: local
  neo4j-data:
    driver: local

# Определение сетей для взаимодействия сервисов
networks:
  rag-net:
    driver: bridge