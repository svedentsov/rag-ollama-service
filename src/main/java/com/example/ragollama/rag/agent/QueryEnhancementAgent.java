package com.example.ragollama.rag.agent;

import reactor.core.publisher.Mono;

import java.util.List;

/**
 * Функциональный интерфейс, определяющий контракт для AI-агента,
 * который улучшает или расширяет исходный пользовательский запрос.
 * Реализации этого интерфейса могут выполнять различные задачи, такие как:
 * <ul>
 *   <li>Очистка и нормализация запроса.</li>
 *   <li>Генерация нескольких вариантов запроса (Multi-Query).</li>
 *   <li>Извлечение ключевых слов или сущностей.</li>
 * </ul>
 * Все операции должны быть асинхронными и возвращать {@link Mono}.
 */
@FunctionalInterface
public interface QueryEnhancementAgent {

    /**
     * Асинхронно обрабатывает исходный запрос и возвращает список улучшенных/сгенерированных запросов.
     *
     * @param originalQuery Оригинальный, "сырой" запрос от пользователя.
     * @return {@link Mono}, который по завершении будет содержать список
     * строк с новыми вариантами запросов. Может включать и исходный запрос.
     */
    Mono<List<String>> enhance(String originalQuery);
}
