package com.example.ragollama.rag;

/**
 * Функциональный интерфейс для реализации паттерна "Советник" (Advisor) в RAG-конвейере.
 * Каждый советник представляет собой отдельный, независимый и переиспользуемый
 * компонент бизнес-логики, который может инспектировать и модифицировать
 * {@link RagContext} перед этапом генерации промпта. Этот паттерн позволяет
 * достичь высокой расширяемости и следовать Open/Closed Principle.
 */
@FunctionalInterface
public interface RagAdvisor {
    /**
     * Применяет свою логику к контексту RAG-запроса.
     *
     * @param context Текущий контекст запроса, содержащий документы,
     *                оригинальный запрос и модель промпта.
     * @return Модифицированный контекст, который будет передан следующему
     *         советнику в цепочке.
     */
    RagContext advise(RagContext context);
}
