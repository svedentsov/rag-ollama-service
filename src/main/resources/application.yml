# ===================================================================
# Основные настройки сервера
# ===================================================================
server:
  port: 8080
  error:
    include-stacktrace: on_param

spring:
  application:
    name: rag-ollama-service
  lifecycle:
    timeout-per-shutdown-phase: 30s

  # --- R2DBC (Reactive Database Connectivity) ---
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/ragdb
    username: user
    password: password
    pool:
      enabled: true
      initial-size: 5
      max-size: 20
      max-idle-time: 30m

  # --- JDBC for non-R2DBC components (Flyway, PgVectorStore, JdbcTemplate) ---
  datasource:
    url: jdbc:postgresql://localhost:5432/ragdb
    username: user
    password: password
    driver-class-name: org.postgresql.Driver

  # --- FreeMarker Template Engine Configuration ---
  freemarker:
    template-loader-path: classpath:/templates/, classpath:/prompts/
    expose-request-attributes: true
    expose-spring-macro-helpers: true
    suffix: .ftl
    settings:
      boolean_format: c

  flyway:
    enabled: true
    locations: classpath:db/migration

  cache:
    type: simple
    cache-names:
      - vector_search_results
      - token_counts
      - ollama_available_models
      - copilot_sessions
      - analytics_cache
    caffeine:
      spec: "maximumSize=500,expireAfterAccess=30m"

  # ===================================================================
  # AI & RAG Pipeline Configuration
  # ===================================================================
  ai:
    ollama:
      base-url: http://localhost:11434
      chat:
        options:
          model: llama3
          temperature: 0.7
      embedding:
        options:
          model: mxbai-embed-large
          model-version: "1.0.0"
    vectorstore:
      pgvector:
        table-name: vector_store
        index-type: HNSW
        distance-type: COSINE_DISTANCE
        dimensions: 1024

# ===================================================================
# Observability (Monitoring & Metrics)
# ===================================================================
management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, rageval
  endpoint:
    health:
      show-details: always
  tracing:
    enabled: false
    sampling:
      probability: 0.0
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
      sla:
        http.server.requests: 50ms, 100ms, 200ms, 500ms, 1s, 2s

# ===================================================================
# API Documentation (OpenAPI / Swagger)
# ===================================================================
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# ===================================================================
# Resilience & Fault Tolerance (Resilience4j)
# ===================================================================
resilience4j:
  circuitbreaker:
    instances:
      ollama:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 3
        failure-rate-threshold: 60
        wait-duration-in-open-state: 15s
        record-exceptions:
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - java.util.concurrent.TimeoutException
      database:
        register-health-indicator: true
        sliding-window-size: 20
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        record-exceptions:
          - io.r2dbc.spi.R2dbcTransientResourceException
          - java.util.concurrent.TimeoutException
      jira:
        register-health-indicator: true
        sliding-window-size: 20
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        record-exceptions:
          - java.util.concurrent.TimeoutException
          - org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable
      confluence:
        register-health-indicator: true
        sliding-window-size: 20
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        record-exceptions:
          - java.util.concurrent.TimeoutException
          - org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable
  retry:
    instances:
      ollama:
        max-attempts: 2
        wait-duration: 5s
        retry-on-exception:
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - java.util.concurrent.TimeoutException
      database:
        max-attempts: 3
        wait-duration: 200ms
        retry-exceptions:
          - io.r2dbc.spi.R2dbcTransientResourceException
          - java.util.concurrent.TimeoutException
      jira:
        max-attempts: 3
        wait-duration: 1s
        retry-on-exception:
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable
      confluence:
        max-attempts: 3
        wait-duration: 2s
        retry-on-exception:
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable
  timelimiter:
    instances:
      ollama:
        timeout-duration: 30m
        cancel-running-future: true
      database:
        timeout-duration: 10s
        cancel-running-future: true
      jira:
        timeout-duration: 15s
        cancel-running-future: true
      confluence:
        timeout-duration: 20s
        cancel-running-future: true

# ===================================================================
# Custom Application Properties (app.*)
# ===================================================================
app:
  file-storage:
    upload-dir: "uploads"
    max-file-size-mb: 10
    allowed-mime-types:
      - "text/plain"
      - "text/markdown"
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "application/pdf"
      - "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
      - "text/x-java-source"

  llm:
    fallback-model: "phi3"
    models:
      FASTEST: "phi3"
      FAST_RELIABLE: "phi3"
      BALANCED: "llama3"
      VISION: "llava"

  prompt:
    rag-template-path: "rag-prompt.ftl"

  reranking:
    enabled: true
    strategies:
      keyword-boost:
        enabled: true
        boost-factor: 0.1
      diversity:
        enabled: true
        lambda: 0.5

  rate-limiting:
    enabled: true
    limits:
      - endpoint: "/api/v1/orchestrator/ask-stream"
        capacity: 20
        refill-period-minutes: 1

  tokenization:
    encoding-model: "o200k_base"

  context:
    max-tokens: 8000

  chat:
    history:
      max-messages: 10

  http-client:
    connect-timeout: 10s
    response-timeout: 30s
    read-write-timeout: 30s
    ollama:
      response-timeout: 25m
      read-write-timeout: 25m

  task-executor:
    core-pool-size: 4
    max-pool-size: 16
    queue-capacity: 100
    thread-name-prefix: "app-async-"

  llm-executor:
    core-pool-size: 8
    max-pool-size: 32
    queue-capacity: 200
    thread-name-prefix: "llm-async-"

  db-executor:
    core-pool-size: 2
    max-pool-size: 8
    queue-capacity: 50
    thread-name-prefix: "db-async-"

  vector-store:
    index:
      m: 32
      ef-construction: 128
      ef-search: 64

  ingestion:
    chunking:
      default-chunk-size: 512
      chunk-overlap: 64

  rag:
    no-context-strategy: fixed
    arrangement-strategy: sandwich
    summarizer:
      enabled: false
    validation:
      enabled: true
    retrieval:
      hybrid:
        expansion-min-docs-threshold: 3
        vector-search:
          top-k: 5
          similarity-threshold: 0.72
        fts:
          top-k: 10

  expansion:
    graph:
      enabled: true

  evaluation:
    f1-score-threshold: 0.85
    scheduler:
      enabled: true
      cron: "0 0 3 * * ?"

  optimization:
    index:
      enabled: true
      cron: "0 0 4 * * ?"
      stale-document-detection:
        enabled: true
    embedding-drift:
      scheduler:
        enabled: true
        cron: "0 0 2 * * ?"
    guardian:
      scheduler:
        enabled: true
        cron: "0 0 1 * * ?"

  curation:
    scheduler:
      enabled: true
      cron: "0 0 5 * * ?"

  analysis:
    flakiness:
      failure-rate-threshold: 5.0
      min-runs-threshold: 10
    cost-model:
      per-dev-hour: 100.0
      per-support-ticket: 25.0
      per-lost-user: 200.0
    autonomy:
      cron: "0 0 7 * * MON-FRI"

  health-monitor:
    scheduler:
      enabled: true
      cron: "0 0 8 * * MON"

  integrations:
    github:
      webhook-secret: "your_super_secret_string_here"
      api-token: "ghp_YourGitHubPersonalAccessToken"
    jira:
      webhook-secret-token: "your_jira_secret_token"
      base-url: "https://your-domain.atlassian.net"
      api-user: "your-email@example.com"
      api-token: "YourJiraApiToken"
    confluence:
      base-url: "https://your-domain.atlassian.net"
      api-user: "your-email@example.com"
      api-token: "YourConfluenceApiToken"
    git:
      repository-url: "https://github.com/your-organization/your-repository.git"
      personal-access-token: "ghp_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
    ci:
      base-url: "http://your-jenkins-instance:8080"
      username: "your-ci-user"
      api-token: "YourCiApiTokenOrPassword"
      rollback-job-name: "deploy-rollback"
    neo4j:
      uri: "bolt://localhost:7687"
      username: "neo4j"
      password: "password"

  security:
    pii-redaction:
      enabled: true
      patterns:
        - "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b"
        - "\\b(?:\\+?7|8)?[\\s\\-]?\\(?\\d{3}\\)?[\\s\\-]?\\d{3}[\\s\\-]?\\d{2}[\\s\\-]?\\d{2}\\b"
        - "\\b(ghp|sk_live|rk_live)_[a-zA-Z0-9]{20,}\\b"
        - "ey[a-zA-Z0-9_\\-]+\\.[a-zA-Z0-9_\\-]+\\.[a-zA-Z0-9_\\-]+"
        - "\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b"

  indexing:
    test-files:
      path: "src/test/java"
      scheduler:
        enabled: true
        cron: "0 0 5 * * ?"

  knowledge-domains:
    domains:
      - name: "technical_docs"
        description: "Техническая документация, архитектурные решения, API-спецификации, гайды по настройке и развертыванию."
      - name: "test_cases"
        description: "База знаний по тест-кейсам. Содержит описания тестовых сценариев, шаги воспроизведения и ожидаемые результаты."
      - name: "hr_policy"
        description: "Документы кадровой службы: политика отпусков, больничных, правила внутреннего распорядка."

  federation:
    projects:
      - id: "rag-ollama-service"
        name: "Основной RAG Сервис"
        gitUrl: "https://github.com/svedentsov/rag-ollama-service.git"
      - id: "notification-service"
        name: "Сервис Уведомлений"
        gitUrl: "https://github.com/svedentsov/notification-service.git"
      - id: "payment-gateway"
        name: "Платежный Шлюз"
        gitUrl: "https://github.com/svedentsov/payment-gateway.git"

  finops:
    quotas:
      enabled: true
      default-tier: "free"
      tiers:
        free:
          total-tokens-limit: 5000000
        pro:
          total-tokens-limit: 5000000
        developer:
          total-tokens-limit: 2000000
      costs:
        input: 0.0005
        output: 0.0015