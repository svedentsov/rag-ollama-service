<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- Путь к директории с лог-файлами -->
    <property name="LOGS" value="./logs"/>
    <!-- Получаем имя приложения из spring.application.name для имени файла лога -->
    <springProperty scope="context" name="appName" source="spring.application.name"/>

    <!-- Регистрируем наш кастомный конвертер для маскирования данных -->
    <conversionRule conversionWord="masked" converterClass="com.example.ragollama.shared.util.LogMaskingConverter" />

    <!-- Аппендер для вывода логов в консоль -->
    <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--
                Паттерн для вывода:
                %d{ISO8601}     - дата и время в формате ISO 8601
                %highlight(%-5level) - уровень логгирования с подсветкой
                [%15.15t]       - имя потока
                %cyan(%C{1})    - имя класса с подсветкой
                [rid:%X{requestId}] - ID запроса из MDC
                %masked         - наше кастомное правило для маскирования сообщения
                %n%throwable    - перенос строки и stack trace, если есть
            -->
            <Pattern>%d{ISO8601} %highlight(%-5level) [%15.15t] %cyan(%C{1}): [rid:%X{requestId}] %masked%n%throwable</Pattern>
        </encoder>
    </appender>

    <!-- Аппендер для записи логов в файл с ротацией -->
    <appender name="RollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOGS}/${appName}.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>%d %p %C{1} [%t] [rid:%X{requestId}] %masked%n</Pattern>
        </encoder>

        <!-- Политика ротации файлов по времени и размеру -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOGS}/archived/${appName}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>10MB</maxFileSize>
        </rollingPolicy>
    </appender>

    <!-- Корневой логгер. Уровень INFO по умолчанию для всех библиотек -->
    <root level="info">
        <appender-ref ref="Console"/>
        <appender-ref ref="RollingFile"/>
    </root>

    <!-- Логгер для нашего приложения. Устанавливаем уровень DEBUG для более подробных логов -->
    <logger name="com.example.ragollama" level="debug" additivity="false">
        <appender-ref ref="Console"/>
        <appender-ref ref="RollingFile"/>
    </logger>

    <!-- Уменьшаем "шум" от некоторых библиотек -->
    <logger name="org.hibernate" level="info"/>
    <logger name="org.springframework.web" level="info"/>
    <logger name="org.springframework.security" level="info"/>
    <logger name="com.zaxxer.hikari" level="info"/>

    <!-- =================================================================== -->
    <!-- Подавляем избыточные ERROR-логи для 404 ошибок                      -->
    <!-- =================================================================== -->
    <!-- Этот логгер понижает уровень для исключений NoResourceFoundException,
         которые генерируются при запросе несуществующих статических ресурсов
         (например, служебные запросы от браузерных DevTools).
         `additivity="false"` предотвращает передачу сообщения в root-логгер. -->
    <logger name="org.springframework.web.servlet.resource.ResourceHttpRequestHandler" level="warn" additivity="false">
        <appender-ref ref="Console"/>
        <appender-ref ref="RollingFile"/>
    </logger>

</configuration>
